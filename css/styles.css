/************************ TAG SELECTORS *************************/
/* Selector{ Property : value;}
Properties should be in Alphabetical Order */

body{
    background-color:#E1FFEE;
    text-align: center; 
    /* Centers everything that doesn't have a widht set*/
    font-family: 'Merriweather', serif;
}
hr{
    background-color: #E1FFEE;
    /* border-style:  dotted none none; */
    border-style: none;
    border-top-style: dotted;
    border-color: grey;
    border-width: 5px;
    /* height: 2px; */
    width: 5%;
    /* % is used to be device friendly (x% of the screen 
    of the device)*/
}
h1{
    color: #66BFBF;
    font-family: 'Sacramento', cursive;
    font-size: 5em;
    margin: 50px auto 0 auto;
    /* 1em = 100% = 16px */
    /* em is based on parent of the element
    so if we set parent ot another size we 
    might face problems 
    
    Use rem (root em ) instead */

}

h2{
    color: #66BFBF;
    font-family: 'Montserrat', sans-serif;
    font-size: 2.5rem;
    font-weight: normal;

}

h3{
    color: #11999E;
    font-family: 'Montserrat', sans-serif;

}

a{
    color: #11999E;
}

div{
    background-color: #E4F9F5;
    position: relative;

}

/* Pseudo class ( tag:pseudo_classname ) */
img:hover{
    background-color: gold;
}
/************************* CLASS SELECTORS ************************/
/* .classselector{ Property: value;} -> NOT UNIQUE  
(overides the tag selector as its more specific)
(HTML element can have more than one class) */

.football{
    background-color: red;
}

.circular{
    border-radius: 100%;
}

.pro{
    text-decoration: underline;
    display: inline-block;
}

/* Display Property:    block -> created block elments
                        inline block -> best of both worlds
                        none -> element does not exist*/
.me{
    display: none;
}

.r{
    visibility: hidden; 
    /* makes the element dissapear but keeps the
     original position as if its still there */
}

.skill-row{
    width: 50%;
    margin: 100px auto 100px auto;
    text-align: left;
    line-height: 2;
}

.code-img{
    width: 25%;
    float: left;
    margin-right: 30px;
}

.chillies-img{
    width: 25%;
    float: right;
    margin-left: 30px;
}

/* .code-skill-description{
    clear: left;}
    /* clear = anti-float */

/* Positioning :    Static-> default

                    Relative-> moves the position of element relative 
                    to default position (static)

                    Absolute-> moves the position of the element 
                    relative to its parent element (or) absolute 
                    to the webpage

                    Fixed-> stays in that position for all time, 
                    used to display elements you want see all the 
                    time while scrolling through your webpage
                    */
/* .red{
    height: 100px;
    width: 100px;
    position: absolute;
    top: 200px;
    left: 200px;
    background-color: red;
}

.blue{
    height: 100px;
    width: 100px;
    top: 100px;
    left: 100px;
    background-color: blue;
    
}

.yellow{
    height: 100px;
    width: 100px;    
    bottom: 100px;
    background-color: yellow;
} */

.grey{
    width: 100px;
    height: 100px;
    background-color: grey;
    margin: 0 auto; 
    /* to center elements with width */
}

.top-container{
    position: relative;
    padding-top: 100px;
    background-color:  #EAF6F6;

}

.mountain{
    display: inline block;
   
}

.top-cloud{
    position: absolute;
    right: 300px;
    top: 50px;
}

.bottom-cloud{
    position: absolute;
    left: 300px;
    bottom: 300px;
}


/************************* ID SELECTORS ************************/
/* #IDselector{ Property: value;} -> UNIQUE 
(overides the tag selector as its more specific)
HTML element can have only one ID */

#Edu{
    color: blue;
}